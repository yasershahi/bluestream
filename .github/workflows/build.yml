name: Build image

on:
  schedule:
    - cron: '0 5 * * *'  # Every day at 5:00 AM UTC
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/*.yml
      - Containerfile*
      - cosign.pub
      - rootfs/**
  push:
    branches:
      - main
    paths:
      - Containerfile*
      - cosign.pub
      - rootfs/**

  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.event.repository.name }}
  REGISTRY_URL: ghcr.io
  REGISTRY_USERNAME: ${{ github.repository_owner }}
  REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Git commit timestamps
        run: echo "TIMESTAMP=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_URL }}/${{ env.REGISTRY_USERNAME }}/${{ env.IMAGE_NAME }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        id: build-and-push
        uses: docker/build-push-action@v6
        env:
          ACTIONS_RUNTIME_TOKEN: ''
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}
        with:
          file: |
            ./Containerfile
          build-args: |
            FEDORA_MAJOR_VERSION=rawhide
          platforms: linux/amd64
          provenance: false
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_URL }}/${{ env.REGISTRY_USERNAME }}/${{ env.IMAGE_NAME }}:rawhide,push-by-digest=true,name-canonical=true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build-and-push.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-rawhide
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.2

      - name: Sign container image
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY_URL }}/${{ env.REGISTRY_USERNAME }}/${{ env.IMAGE_NAME }}:rawhide
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_KEY }}

      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.build-and-push.outputs) }}"

